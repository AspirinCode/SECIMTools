<tool id="scatterplot_rpy-3d-png" name="Scatterplot 3D PNG">
  <description>of three numeric columns</description>
  <command interpreter="python">scatterplot-3d-png.py $input $out_file1 $col1 $col2 $col3 "$title" "$xlab" "$ylab" "$zlab" "$displaywindow"</command>
  <inputs>
    <param name="input" type="data" format="tabular" label="Dataset" help="Dataset missing? See TIP below"/>
    <param name="col1" type="data_column" data_ref="input" numerical="True" label="Numerical column for x axis" />
    <param name="col2" type="data_column" data_ref="input" numerical="True" label="Numerical column for y axis" />
    <param name="col3" type="data_column" data_ref="input" numerical="True" label="Numerical column for z axis" />
    <param name="title" size="30" type="text" value="Scatterplot" label="Plot title"/>
    <param name="xlab" size="30" type="text" value="V1" label="Label for x axis"/>
    <param name="ylab" size="30" type="text" value="V2" label="Label for y axis"/>
    <param name="zlab" size="30" type="text" value="V3" label="Label for z axis"/>
    <param name="displaywindow" size="30" type="text" value="False" label="Display Test Window (only in Linux)"/>
  </inputs>
  <outputs>
    <data format="png" name="out_file1" />
  </outputs>
  <requirements>
    <requirement type="python-module">matplotlib</requirement>
  </requirements>
  <!-- TODO: uncomment the following test when we have tools.update_state() working for 
       multiple dependents with the same dependency.
  <tests>
    <test>
      <param name="input" value="scatterplot_in1.tabular" ftype="tabular"/>
      <param name="col1" value="2"/>
      <param name="col2" value="3"/>
      <param name="title" value="Scatterplot"/>
      <param name="xlab" value="V1"/>
      <param name="ylab" value="V2"/>
      <output name="out_file1" file="scatterplot_out1.png" />
    </test>
  </tests>
  -->
  <help>

.. class:: infomark

**TIP:** If your data is not TAB delimited, use *Text Manipulation-&gt;Convert*

-----

**Syntax**

This tool creates a simple scatter plot between two variables containing numeric values of a selected dataset. 

- All invalid, blank and comment lines in the dataset are skipped.  The number of skipped lines is displayed in the resulting history item.

- **Plot title** The scatterplot title
- **Label for x axis** and **Label for y axis** The labels for x and y axis of the scatterplot.

-----

**Example**

- Input file::

    1   68  4.1	3.2
    2   71  4.6	3.3
    3   62  3.8	3.4
    4   75  4.4	4.6
    5   58  3.2	6.2
    6   60  3.1	4.3
    7   67  3.8	2.2
    8   68  4.1	1.1
    9   71  4.3	5.5
    10  69  3.7 3.9

- Create a simple scatterplot between the variables in column 2 and column 3 of the above dataset.

.. image:: ${static_path}/images/scatterplot.png

</help>
</tool>
